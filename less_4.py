'''
1. Реализовать скрипт, в котором должна быть предусмотрена функция расчёта заработной платы сотрудника.
Используйте в нём формулу: (выработка в часах*ставка в час) + премия.
Во время выполнения расчёта для конкретных значений необходимо запускать скрипт с параметрами.
'''

# from sys import argv
#
# # Распакуем переданные аргументы
# module_name, hors_st, rub_per_h_st, prem_st = argv
#
#
# def salary_calc(hors, rub_per_h, prem):
#     return (hors * rub_per_h) + prem
#
#
# print(salary_calc(int(hors_st), int(rub_per_h_st), int(prem_st)))
#

'''
2. Представлен список чисел. 
Необходимо вывести элементы исходного списка, значения которых больше предыдущего элемента.
'''

# # исходный список
# ls = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
#
# ls_1 = [val for ind, val in enumerate(ls) if ind > 0 and val > ls[ind-1]]
# print(ls_1)

'''
3. Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21. Решите задание в одну строку.
'''

# print([i for i in range(20, 241) if i%20 == 0 or i%21 == 0])

'''
4. Представлен список чисел. Определите элементы списка, не имеющие повторений. 
Сформируйте итоговый массив чисел, соответствующих требованию. 
Элементы выведите в порядке их следования в исходном списке. 
Для выполнения задания обязательно используйте генератор.
'''

# ls = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
#
# ls_1 = [i for i in ls if ls.count(i) == 1]
# print(ls_1)

'''
5. Реализовать формирование списка, используя функцию range() и возможности генератора. 
В список должны войти чётные числа от 100 до 1000 (включая границы). 
Нужно получить результат вычисления произведения всех элементов списка.
'''

# from functools import reduce
#
#
# def multipl(a, b):
#     return a * b
#
#
# ls = [i for i in range(100, 1001) if i%2 == 0]
# mult_all = reduce(multipl, ls)
#
# print(ls, mult_all, sep='\n')
