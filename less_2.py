'''
п. 1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
'''

# #Создадим список с эл-ми различного типа
# ls = [23, 'ddd', False, 47.8, [8, 6], ('e',), None]
#
# #Проверим и выведем типы эл-ов списка
# for i in ls:
#     print(type(i))

'''
п. 2. Для списка реализовать обмен значений соседних элементов. 
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д. 
При нечётном количестве элементов последний сохранить на своём месте. 
Для заполнения списка элементов нужно использовать функцию input().
'''

# # запросим у пользователя значения эл-ов списка, в качестве разделителя эл-ов должна быть ","
# st_inpt = input('задайте набор эл-ов для списка. Элементы должны отделяться символом ","\n')
#
# # Разобьем полученную от пользователя строку по разделителю, преобразуем в список
# raw_ls = st_inpt.split(',')
#
# # пользователь наверняка вводил пробелы после "," Удалим пробелы в начале и концеэ лементов,
# # проигнорируем "пустые" эл-ты (состоящие только из пробелов)
# ls = [st.replace(' ', '') for st in raw_ls if st.replace(' ', '')]
#
# print(f'список до замены значений\n{ls}')
#
# # Получем последний индекс, для которого можно производить замену значений (четный)
# end_ind = (len(ls)-1, len(ls))[len(ls) % 2 == 0]
#
# # замена "соседних" значений
# for ind in range(0, end_ind, 2):
#     ls[ind+1], ls[ind] = tuple(ls[ind: ind+2])
#
# print(f'список после замены значений\n{ls}')

'''
п.3. Пользователь вводит месяц в виде целого числа от 1 до 12. 
Сообщить, к какому времени года относится месяц (зима, весна, лето, осень). 
Напишите решения через list и dict.
'''

# #Запросим у пользователя номер месяца
# st_inpt = ''
# while not st_inpt.isdigit() or int(st_inpt) > 12 or int(st_inpt) < 0:
#     st_inpt = input('Введите номер месяца числом от 1 до 12\n')
#
# # Сформируем словарь с ключами- названия сезонов и со значениями - номера месяцев сезона
# seasons = {
#     'Зима': [12, 1, 2],
#     'Весна': [3, 4, 5],
#     'Лето': [6, 7, 8],
#     'Осень': [9, 10, 11],
# }
#
# # Ищем в словаре введенный пользователем номер месяца
# for seas, months in seasons.items():
#     if int(st_inpt) in months:
#         print(f'это {seas}')
#

'''
п.4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. 
Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.
'''

# # запросим у пользователя список слов
# st_inpt = input('Введите несколько слов, раздененных пробелами\n')
#
# # Разобьем полученную от пользователя строку по разделителю, преобразуем в список
# word_ls = st_inpt.split(' ')
#
# # Вывод списка
# for ind, wrd in enumerate(word_ls):
#     print(f'Слово № {ind +1} - {wrd[:11]}')

'''
п.5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. 
У пользователя нужно запрашивать новый элемент рейтинга. 
Если в рейтинге существуют элементы с одинаковыми значениями, 
то новый элемент с тем же значением должен разместиться после них.
'''

# my_list = [7, 5, 3, 3, 2]
#
# # запросим у пользователя число
# num = int(input('Введите число\n'))
#
# # сразупроверим, не лежит ли новое значение в пределах имеющихся
# # если нет - просто добавим в соответствующий конец списка
# if num < my_list[-1]:
#     my_list.insert(len(my_list), num)
# elif num > my_list[0]:
#     my_list.insert(0, num)
#
# else:
#     for ind, val in enumerate(my_list):
#         if num >= val:
#             my_list.insert(ind, num)
#             break
#
# print(my_list)
#

