'''
1. Создать класс TrafficLight (светофор).
определить у него один атрибут color (цвет) и метод running (запуск);
атрибут реализовать как приватный;
в рамках метода реализовать переключение светофора в режимы: красный, жёлтый, зелёный;
продолжительность первого состояния (красный) составляет 7 секунд, второго (жёлтый) — 2 секунды, т
ретьего (зелёный) — на ваше усмотрение;
переключение между режимами должно осуществляться только в указанном порядке (красный, жёлтый, зелёный);
проверить работу примера, создав экземпляр и вызвав описанный метод.
'''

import time
from itertools import cycle


# Определим список кортежей, в которых первыми элементами будут режимы светофора,
# а вторыми - продолжительности режимов в сек.
MODES = [
    ('Красный', 7),
    ('Желтый', 2),
    ('зеленый', 5),
]

# Определим список состояний светофора
STATES = ['Запущен', 'Остановлен']


class TrafficLight:
    __color = ''

    def run(self, duration):
        '''
        Запускает цикл работы светофора на время duration (сек)
        :param duration:
        :return:
        '''

        # Переменная накапливает время работы светофора
        run_time = 0

        # итератор, повторяющий элементы некоторого списка
        for mode, long in cycle(MODES):
            self.__color = mode

            # В каждый проход цикла будем проверять текущую наработку по времени светофора
            if run_time < duration:
                print(f'Зажегся {self.__color} свет')
            else:
                print('Светофор выключен')
                return

            # задает время действия текущего состояния
            time.sleep(long)

            run_time += long


tr_1 = TrafficLight()
tr_1.run(20)

