'''
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
'''

# def div(chis, znam):
#     '''
#     функция возвращает результат деления числителя (chis) на знаменатель (znam)
#     :param chis: -> int
#     :param znam: -> int
#     :return: -> float
#     '''
#     return chis/znam
#
#
# # Запросим у пользователя "числитель" и "знаменатель"
# # Проверку на корректность введенных пользователем значений произведем до вызова ф-ии,
# # чтобы у пользователя была возможность заново ввести корректные значения
#
# correct = False     # Переменная будет хранить признак корректности введенных данных
# while not correct:
#     a, b = int(input('Введите числитель\n')), int(input('Введите знаменатель\n'))
#     correct = (b != 0)
#     if not correct:
#         print('Знаменатель не может быть равным нулю')
#     else:
#         print(f'{a} / {b} = ', div(a, b), sep='')

'''
2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. 
Осуществить вывод данных о пользователе одной строкой.
'''

# def in_one_string(name, scd_name, year, city, email, phone):
#     '''
#     функция соберает данные пользоватея в одну строку
#     :param name: -> (str) Имя
#     :param scd_name: -> (str) Фамилия
#     :param year: -> (int) Год рождения
#     :param city: -> (str) Город проживания
#     :param email: -> (str) Адрес почты
#     :param phone: -> (str) Номер телефона
#     :return: -> (str)
#     '''
#     return f'Имя - {name.capitalize()}, ' \
#            f'Фамилия - {scd_name.capitalize()}, ' \
#            f'год рождения - {year}, ' \
#            f'город проживания - {city}, ' \
#            f'адрес почты - {email}, ' \
#            f'номер телефона - {phone}.'
#
#
# # распечатаем результат вызова ф-ии
# print(in_one_string(name='Владимир',
#                     scd_name='Рогов',
#                     year=1976, city='Гонконг',
#                     email='vlad@mail.ru',
#                     phone='+9-2763-345-76-89'))


'''
3. Реализовать функцию my_func(), 
которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.
'''

# def sum_tow_max(arg1, arg2, arg3):
#     '''
#     среди переданных аргументов находятся два наибольших, возвращается их сумма
#     :param arg1: -> (int, float)
#     :param arg2: -> (int, float)
#     :param arg3: -> (int, float)
#     :return: -> (int, float)
#     '''
#
#     # поместим аргументы в список, и отсортерруем
#     ls = [arg1, arg2, arg3]
#     ls.sort()
#
#     # два наибольших аргумента будут в конце списка
#     return sum(ls[1:])
#
# a = 34
# b = 67
# c = 28
# print(f'Переданы значения: {a}, {b}, {c}', f'сумма двух наибольших: {sum_tow_max(a, b, c)}', sep='\n')
